name: Build and Deploy

on:
  workflow_dispatch:
  push: 
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOTNET_VERSION: '9.0.x'
      NODE_VERSION: '22'
      DEPLOY_HOST: ${{ secrets.VPS_HOST }}
      DEPLOY_USER: ${{ secrets.VPS_USER }}
      DEPLOY_KEY: ${{ secrets.VPS_SSH_KEY }}
      DEPLOY_PATH: ${{ vars.VPS_DEPLOY_PATH }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Build frontend
        working-directory: frontend
        run: |
          npm run install-dependencies
          npm run build

      - name: Copy frontend build into backend
        run: |
          if [ -d RubyWebsite/wwwroot/]; then
            rm -rf RubyWebsite/wwwroot/*
          fi
          cp -r frontend/build/* RubyWebsite/wwwroot/

      - name: Restore and build backend
        working-directory: RubyWebsite
        run: |
          dotnet restore
          dotnet publish -c Release -o publish

      - name: Deploy to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ env.DEPLOY_KEY }}
          source: "RubyWebsite/publish/*"
          target: "${{ env.DEPLOY_PATH }}"

      - name: Restart service on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ env.DEPLOY_KEY }}
          script: |
            sudo systemctl daemon-reload
            sudo systemctl restart web-app.service
